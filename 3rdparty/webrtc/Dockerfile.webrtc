FROM nvcr.io/nvidia/l4t-base:r32.7.1

# For the rest of this Dockerfile
SHELL ["/bin/bash", "-c"]

ARG SUDO=command
COPY Open3D/3rdparty/webrtc /Open3D/3rdparty/webrtc
WORKDIR /Open3D/

# Set WebRTC version for Open3D consumable
ENV WEBRTC_COMMIT_SHORT=eacb439
ENV WEBRTC_COMMIT=eacb43942d6f6592f0ab978f702464acea8cd090

ENV GLIBCXX_USE_CXX11_ABI=1


ENV DEPOT_TOOLS="/depot_tools"
ENV PATH=${DEPOT_TOOLS}:${PATH}

ENV DEPOT_TOOLS_UPDATE=0

RUN options="$(echo "$@" | tr ' ' '|')"

RUN apt-get update && \
    apt-get install -y \
        apt-transport-https \
        build-essential \
        ca-certificates \
        git \
        gnupg \
        libglib2.0-dev \
        python \
        python-pip \
        python-setuptools \
        python3-setuptools \
        python-wheel \
        software-properties-common \
        tree \
        curl \
        wget


# Use GCC/G++ 10
RUN add-apt-repository ppa:ubuntu-toolchain-r/test -y

RUN apt-get update && \
    apt-get install -y \
    g++-10

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10 --slave /usr/bin/g++ g++ /usr/bin/g++-10

RUN curl https://apt.kitware.com/keys/kitware-archive-latest.asc \
        2>/dev/null | gpg --dearmor - | sed -n 'w /etc/apt/trusted.gpg.d/kitware.gpg'

RUN apt-add-repository --yes "deb https://apt.kitware.com/ubuntu/ bionic main"

RUN apt-get update

RUN apt-get --yes install cmake

RUN cmake --version >/dev/null

RUN apt-get clean && \
 rm -rf /var/lib/apt/lists/*

WORKDIR /

RUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git

RUN chmod 755 /depot_tools/gclient
RUN chmod 755 /depot_tools/fetch
RUN chmod 755 /depot_tools/vpython
RUN chmod 755 /depot_tools/vpython3
RUN chmod 755 /depot_tools/cipd
RUN chmod 755 /depot_tools/download_from_google_storage

RUN vpython3 --version
RUN vpython3 -m pip install \
     httplib2 \
     six

RUN mkdir webrtc
WORKDIR /webrtc
RUN fetch --nohooks --no-history webrtc

WORKDIR /webrtc/src
RUN git clean -ffd
RUN git checkout $WEBRTC_COMMIT
RUN git submodule update --init --recursive

RUN rm -r /webrtc/.cipd/

RUN gclient sync -D --force --reset --no-history

RUN curl "https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h" -o skipcache

WORKDIR /webrtc/src/third_party/libyuv
RUN git checkout 966768

WORKDIR /

# GN
WORKDIR /depot_tools
RUN rm gn
RUN wget -q https://github.com/realitymatrix/gn/releases/download/v2042/gn
RUN chmod 755 gn

# Ninja
RUN rm ninja
RUN wget -q https://github.com/realitymatrix/ninja/releases/download/v1.11.0/ninja
RUN chmod 755 ninja

# Replace GN in buildtools
WORKDIR /webrtc/src/buildtools/linux64/
RUN rm gn
RUN wget -q https://github.com/realitymatrix/gn/releases/download/v2042/gn
RUN chmod 755 gn

# Enable build with GNU toolchain via hack
COPY /Open3D/3rdparty/webrtc/build/toolchain/linux/BUILD.gn /webrtc/src/build/toolchain/linux/BUILD.gn

# Copy webrtc buildfiles into webrtc dir
RUN cp /Open3D/3rdparty/webrtc/{CMakeLists.txt,webrtc_common.cmake} /webrtc

WORKDIR /webrtc

RUN mkdir build

WORKDIR /webrtc/build

# Generate ninja toolchain files
RUN cmake -DCMAKE_INSTALL_PREFIX=../../webrtc_release .. \
        -DGLIBCXX_USE_CXX11_ABI=${GLIBCXX_USE_CXX11_ABI} \
	-DCMAKE_BUILD_TYPE=Release \
        ..

# Compile
RUN make -j$(nproc)

# Install
RUN make install

WORKDIR /

# Package
RUN tree -L 2 webrtc_release || ls webrtc_release/*

RUN echo Package WebRTC

RUN tar -czf \
 "/webrtc_${WEBRTC_COMMIT_SHORT}_linux_cxx-abi-${GLIBCXX_USE_CXX11_ABI}.tar.gz" \
 webrtc_release

ENV WEBRTC_PACKAGE="webrtc_${WEBRTC_COMMIT_SHORT}_linux_cxx-abi-${GLIBCXX_USE_CXX11_ABI}.tar.gz"
RUN cmake -E sha256sum ${WEBRTC_PACKAGE} | tee "checksum_${WEBRTC_PACKAGE%%.*}.txt"
RUN ls -alh ${WEBRTC_PACKAGE}