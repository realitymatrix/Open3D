FROM nvcr.io/nvidia/l4t-base:r32.6.1

# For the rest of this Dockerfile
SHELL ["/bin/bash", "-c"]

ARG SUDO=command
COPY Open3D/3rdparty/webrtc /Open3D/3rdparty/webrtc
WORKDIR /Open3D/

ENV WEBRTC_COMMIT=1e8bb67295b772f5ebd3c4a7c79cdbddfe563a7c
ENV DEPOT_TOOLS_COMMIT=93fbd989e046cdc2e4bf6a23b5a517e6c4c2d01b
ENV GLIBCXX_USE_CXX11_ABI=1
ENV NPROC=$(nproc)


ENV DEPOT_TOOLS="/depot_tools"
ENV PATH=${DEPOT_TOOLS}:${PATH}

ENV DEPOT_TOOLS_UPDATE=0

RUN options="$(echo "$@" | tr ' ' '|')"

RUN apt-get update && \
    apt-get install -y \
        apt-transport-https \
        build-essential \
        ca-certificates \
        git \
        gnupg \
        libglib2.0-dev \
        python \
        python-pip \
        python-setuptools \
        python3-setuptools \
        python-wheel \
        software-properties-common \
        tree \
        curl \
        wget

RUN curl https://apt.kitware.com/keys/kitware-archive-latest.asc \
        2>/dev/null | gpg --dearmor - | sed -n 'w /etc/apt/trusted.gpg.d/kitware.gpg'

RUN apt-add-repository --yes "deb https://apt.kitware.com/ubuntu/ bionic main"

RUN apt-get update

RUN apt-get --yes install cmake

RUN cmake --version >/dev/null

RUN apt-get clean && \
 rm -rf /var/lib/apt/lists/*

WORKDIR /

RUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
RUN git -C depot_tools checkout $DEPOT_TOOLS_COMMIT

RUN chmod 755 /depot_tools/gclient
RUN chmod 755 /depot_tools/fetch
RUN chmod 755 /depot_tools/vpython
RUN chmod 755 /depot_tools/vpython3
RUN chmod 755 /depot_tools/cipd
RUN chmod 755 /depot_tools/download_from_google_storage

RUN vpython3 --version
RUN vpython3 -m pip install \
     httplib2 \
     six

RUN mkdir webrtc
WORKDIR /webrtc
RUN fetch --nohooks webrtc

#RUN python /webrtc/src/build/linux/sysroot_scripts/install-sysroot.py --arch=arm64

WORKDIR /webrtc/src
RUN git clean -ffd
RUN git checkout $WEBRTC_COMMIT
RUN git submodule update --init --recursive

RUN gclient sync -D --force --reset

RUN curl "https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h" -o skipcache

WORKDIR /webrtc/src/third_party/libyuv
RUN git checkout 966768

# Replace LLVM
WORKDIR /webrtc/src/third_party/llvm-build/
RUN rm -r /webrtc/src/third_party/llvm-build/Release+Asserts/
RUN wget -q https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.5/clang+llvm-14.0.5-aarch64-linux-gnu.tar.xz
RUN tar -xf clang+llvm-14.0.5-aarch64-linux-gnu.tar.xz
RUN mv ./clang+llvm-14.0.5-aarch64-linux-gnu ./Release+Asserts
ENV PATH="/webrtc/src/third_party/llvm-build/Release+Asserts/bin":${PATH}
RUN echo ${PATH}
RUN clang++ --version

WORKDIR /

# GN
RUN rm /depot_tools/gn
RUN wget -q https://github.com/realitymatrix/gn/releases/download/v2042/gn
RUN cp ./gn /depot_tools/gn
RUN chmod 755 /depot_tools/gn

# Replace GN in buildtools
RUN rm /webrtc/src/buildtools/linux64/gn
RUN cp /gn /webrtc/src/buildtools/linux64/gn

# Ninja
RUN wget -q https://github.com/realitymatrix/ninja/releases/download/v1.11.0/ninja
RUN rm /depot_tools/ninja
RUN cp ./ninja /depot_tools/ninja
RUN chmod 755 /depot_tools/ninja

RUN gn --version
RUN ninja --version


WORKDIR /Open3D

RUN cp 3rdparty/webrtc/{CMakeLists.txt,webrtc_common.cmake} ../webrtc

ENV WEBRTC_COMMIT_SHORT=1e8bb67

WORKDIR /webrtc

RUN mkdir build

WORKDIR /webrtc/build

RUN cmake -DCMAKE_INSTALL_PREFIX=../../webrtc_release .. \
        -DGLIBCXX_USE_CXX11_ABI=${GLIBCXX_USE_CXX11_ABI} \
#        -DCMAKE_CXX_COMPILER=clang++ \
        -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
	-DCMAKE_BUILD_TYPE=Release \
        ..

#RUN make -j 8

#RUN make install

#RUN tree -L 2 webrtc_release || ls webrtc_release/*

#RUN echo Package WebRTC

#RUN tar -czf \
# "$OPEN3D_DIR/webrtc_${WEBRTC_COMMIT_SHORT}_linux_cxx-abi-${GLIBCXX_USE_CXX11_ABI}.tar.gz" \
# webrtc_release

#RUN webrtc_package=$(ls webrtc_*.tar.gz)
#RUN cmake -E sha256sum "$webrtc_package" | tee "checksum_${webrtc_package%%.*}.txt"
#RUN ls -alh "$webrtc_package"