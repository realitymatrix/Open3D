# Run from the root Open3D directory:
# GLIBCXX_USE_CXX11_ABI, WEBRTC_COMMIT abd DEPOT_TOOLS_COMMIT are accepted as
# build-args. e.g.:
#
# > GLIBCXX_USE_CXX11_ABI=0
#   - docker build --build-arg GLIBCXX_USE_CXX11_ABI=0 -t open3d-webrtc:abi0 \
#       -f 3rdparty/webrtc/Dockerfile.webrtc .
#   - docker run --rm --entrypoint cat open3d-webrtc:abi0 \
#       webrtc_60e6748_cxx-abi-0.tar.gz > webrtc_60e6748_cxx-abi-0.tar.gz
# > GLIBCXX_USE_CXX11_ABI=1
#   - docker build --build-arg GLIBCXX_USE_CXX11_ABI=1 -t open3d-webrtc:abi1 \
#       -f 3rdparty/webrtc/Dockerfile.webrtc .
#   - docker run --rm --entrypoint cat open3d-webrtc:abi1 \
#       webrtc_60e6748_cxx-abi-1.tar.gz > webrtc_60e6748_cxx-abi-1.tar.gz

FROM nvcr.io/nvidia/l4t-base:r32.6.1

# For the rest of this Dockerfile
SHELL ["/bin/bash", "-c"]

ARG SUDO=command
COPY Open3D/3rdparty/webrtc /Open3D/3rdparty/webrtc
WORKDIR /Open3D/

#RUN bash -c "chmod 777 /Open3D/3rdparty/webrtc/webrtc_build.sh"

#RUN bash -c "source 3rdparty/webrtc/webrtc_build.sh && install_dependencies_ubuntu purge-cache"
#RUN bash -c "source 3rdparty/webrtc/webrtc_build.sh && download_webrtc_sources"
#RUN bash -c "source 3rdparty/webrtc/webrtc_build.sh && build_webrtc"


ENV WEBRTC_COMMIT=60e674842ebae283cc6b2627f4b6f2f8186f3317
ENV GLIBCXX_USE_CXX11_ABI=1
ENV NPROC=$(nproc)


ENV DEPOT_TOOLS="/depot_tools"
ENV PATH=${DEPOT_TOOLS}:${PATH}
ENV PATH="/depot_tools/python-bin/python3":${PATH}
ENV PATH="/depot_tools/python2-bin/python2":${PATH}
ENV PATH="/depot_tools/vpython":${PATH}
ENV PATH="/depot_tools/vpython3":${PATH}
ENV DEPOT_TOOLS_UPDATE=0
ENV GCLIENT_PY3=1

RUN options="$(echo "$@" | tr ' ' '|')"

RUN apt-get update && \
    apt-get install -y \
        apt-transport-https \
        build-essential \
        ca-certificates \
        git \
        gnupg \
        libglib2.0-dev \
        python \
        python-pip \
        python-setuptools \
        python-wheel \
        software-properties-common \
        tree \
        curl \
        wget
